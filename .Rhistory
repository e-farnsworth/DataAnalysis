house_data %>%
group_by(region) %>%
summarise(mean = mean(price), median = median(price))
# find header code to ignore this upon knit and such
# code instructions rom copilot to upload a data set from kaggle using the kaggle api
#install.packages("devtools")
#devtools::install_github("ldurazo/kaggler")
# gotten from Copilot
#library(readr)
#library(kaggler)
# this is specific to your Kaggle user
#kgl_auth(creds_file = 'kaggle.json')
#response <- kgl_datasets_download_all(owner_dataset = "ahmedshahriarsakib/usa-real-estate-dataset/data?select=realtor-data.zip.csv")
#download.file(response, "data/temp.zip", mode = "wb")
# Currently this last part is not working.
# Loading in libraries
library(DT)
# Need DT for Fancy Table
library(tidyverse)
# Makes the pipe operator work (among other things)
library(ggplot2)
# for plots
## The code within the double pounds was gotten from Copilot
# Reading in Raw data to temp file
f <- file.path(tempdir(),"archive\\realtor-data.zip.csv")
# Check if the file exsists
if (file.exists(f)) {
raw_data <- read.csv("archive\\realtor-data.zip.csv", header = TRUE)
} else { print("Download data from the kaggle link below")}
##
raw_data <- read.csv("archive\\realtor-data.zip.csv", header = TRUE)
raw_data <- read.csv("archive\\realtor-data.zip.csv", header = TRUE)
raw_data <- read.csv("archive\\realtor-data.zip.csv", header = TRUE)
# Filtering the Data down
house_data <- raw_data %>%
filter(house_size > 0) %>% # Getting rid of NA in house size
filter(bed > 0 & bed < 6) %>% # slimming down the bed count to reasonable numbers (some were 100+ beds which we're not interested in)
filter(acre_lot > 0) %>% # getting rid of NA in acre lot
filter(price > 1000) %>% # making sure price is reasonable
select(c(price, bed, bath, acre_lot, city, state, house_size)) %>% # Don't care too much about specific address, who is selling it, or "current status"
filter(state %in% c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska","Nevada","New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")) %>% # In the states
mutate(division = case_when(
state %in% c("Connecticut","Maine","Massachusetts","New Hampshire", "Rhode Island","Vermont") ~ "New England",
state %in% c("New Jersey","New York","Pennsylvania") ~ "Middle Atlantic",
state %in% c("Illinois", "Indiana", "Michigan", "Ohio", "Wisconsin") ~ "East North Central",
state %in% c("Iowa", "Kansas", "Minnesota", "Missouri", "Nebraska", "North Dakota", "South Dakota") ~ "West North Central",
state %in% c("Delaware", "Florida", "Georgia", "Maryland", "North Carolina", "South Carolina", "Virginia", "West Virginia") ~ "South Atlantic",
state %in% c("Alabama", "Kentucky", "Mississippi", "Tennessee") ~ "East South Central",
state %in% c("Arkansas", "Louisiana", "Oklahoma", "Texas") ~ "West South Central",
state %in% c("Arizona", "Colorado", "Idaho", "Montana", "Nevada", "New Mexico", "Utah", "Wyoming") ~ "Mountain",
state %in% c("Alaska", "California", "Hawaii", "Oregon", "Washington") ~ "Pacific"
)) %>%  # sorting data by Census Bureau Divisions...
mutate(region = case_when(
division %in% c("New England", "Middle Atlantic") ~ "North East",
division %in% c("East North Central", "West North Central") ~ "Midwest",
division %in% c("South Atlantic", "East South Central", "West South Central") ~ "South",
division %in% c("Mountain", "Pacific") ~ "West"
)) # ... and regions
# Display the data set. particularly the variables we are most interested.
datatable(house_data, options = list(lengthMenu = c(3,10,50)), extensions = "Responsive")
house_data %>%
group_by(region) %>%
summarise(mean = mean(price), median = median(price))
house_data %>%
group_by(region) %>%
summarise(mean = mean(price), median = median(price))
region_data  <-  filter(house_data, region == "Midwest")
region_data %>%
group_by(division) %>%
summarise(mean = mean(price), median = median(price))
ggplot(division_data, aes(x=state, y=price)) +
geom_boxplot() +
labs(
title = "House Price by State in the East North Central division",
x = "State",
y = "House Price (US dollars)"
)
division_data <- filter(region_data, division == "East North Central")
ggplot(division_data, aes(x=state, y=price)) +
geom_boxplot() +
labs(
title = "House Price by State in the East North Central division",
x = "State",
y = "House Price (US dollars)"
)
ggplot(division_data, aes(x=state, y=log(price))) +
geom_boxplot() +
labs(
title = "The Log of House Price by State in the East North Central division",
x = "State",
y = "Log of House Price (US dollars)"
)
population_data_raw <- read.csv("us-cities-table-for-ohio.csv")
population_data <- population_data_raw %>%
mutate(type = case_when(
pop2024 > 100000 ~ "Urban",
pop2024 < 5000 ~ "Rural",
pop2024 <= 100000 & pop2024 >= 5000 ~ "Suburban"
)) %>%
select(c(name, type))
urban_ohio <- population_data %>%
filter(type == "Urban")
population_data_raw <- read.csv("us-cities-table-for-ohio.csv")
population_data <- population_data_raw %>%
mutate(type = case_when(
pop2024 > 100000 ~ "Urban",
pop2024 < 5000 ~ "Rural",
pop2024 <= 100000 & pop2024 >= 5000 ~ "Suburban"
)) %>%
select(c(name, type))
# List and Unlist gotten from Copiolot
urban_ohio <- population_data %>%
filter(type == "Urban")
urban_list <- unlist(list(urban_ohio$name))
suburban_ohio <- population_data %>%
filter(type == "Suburban")
suburban_list <- unlist(list(suburban_ohio$name))
rural_ohio <- population_data %>%
filter(type == "Rural")
rural_list <- unlist(list(rural_ohio$name))
# load in the population data
# filter into the three categories explained below (100000+ Urban, 5000- rural, else sub-urban)
ohio_data <- division_data %>%
filter(state == "Ohio") %>%
select(c(price, bed, bath, acre_lot, city, state, house_size)) %>%
mutate(type = case_when(
city %in% urban_list ~ "Urban",
city %in% suburban_list ~ "Suburban",
city %in% rural_list ~ "Rural",
.default = "Rural"
))
#view(ohio_data)
ohio_data %>%
count(type)
ggplot(ohio_data, aes(x=type, y=price)) +
geom_boxplot() +
labs(
title = "House Price of Urban, Suburban, and Rual areas in Ohio",
x = "Location",
y = "House Price (US dollars)"
)
ggplot(ohio_data, aes(x=type, y=log(price))) +
geom_boxplot() +
labs(
title = "Log of House Price of Urban, Suburban, and Rual areas in Ohio",
x = "Location",
y = "Log of House Price (US dollars)"
)
